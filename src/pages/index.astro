---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';

const explainer = `
An Astro website can go way beyond static pages - on the right platform.

Netlify supports not only [Streaming SSR](https://docs.astro.build/en/guides/server-side-rendering/#html-streaming) and fast [Edge Middleware](https://docs.astro.build/en/guides/middleware/), but also [on-demand revalidation](https://www.netlify.com/blog/cache-tags-and-purge-api-on-netlify/) and [stale-while-revalidate](https://www.netlify.com/blog/swr-and-fine-grained-cache-control/). 
Any page or data can be rebuilt only when needed, without site visitors ever getting a performance hit.
`;
---

<Layout title="Welcome to Astro.">
    <ContextAlert class="mb-8" />
    <h1 class="mb-10">Netlify Platform Starter for Astro</h1>
    <Markdown content={explainer} class="mb-10 text-lg" />
    <p>
        <a href="https://docs.netlify.com/frameworks/astro/" class="btn btn-lg sm:min-w-64">Read the Docs</a>
    </p>
    <script>
        appier('init', {
            app_id: '41a20648e34aaaad4d7e', // 這個很重要，需向 Appier 拿
            platform: 'WEB'
        });
        appier('getRecommendationByScenario', {
            scenario: 'test homepage', // 向 Appier 設定的情境名稱
            scenario_id: 'LTt6bgqroyaJCdcJQfd5Wt',
            callback: function (response) {
                console.log('取得推薦資料:', response);

                renderRecommendations(response);
                appier('event', 'recommendation_impression', {
                    scenario: 'your_scenario_name',
                    items: res.recommendations.map((r) => r.item_id)
                });
            }
        });
        function renderRecommendations(items) {
            const container = document.getElementById('rec-list');
            container.innerHTML = items
                .map(
                    (item) => `
            <div class="product">
                <img src="${item.image}" alt="${item.title}" />
                <p>${item.title}</p>
            </div>
        `
                )
                .join('');
        }
    </script>
</Layout>
