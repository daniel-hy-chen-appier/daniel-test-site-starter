---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';

const explainer = `
An Astro website can go way beyond static pages - on the right platform.

Netlify supports not only [Streaming SSR](https://docs.astro.build/en/guides/server-side-rendering/#html-streaming) and fast [Edge Middleware](https://docs.astro.build/en/guides/middleware/), but also [on-demand revalidation](https://www.netlify.com/blog/cache-tags-and-purge-api-on-netlify/) and [stale-while-revalidate](https://www.netlify.com/blog/swr-and-fine-grained-cache-control/). 
Any page or data can be rebuilt only when needed, without site visitors ever getting a performance hit.
`;
---

<Layout title="Welcome to Astro.">
    <ContextAlert class="mb-8" />
    <h1 class="mb-10">Netlify Platform Starter for Astro</h1>
    <Markdown content={explainer} class="mb-10 text-lg" />
    <p>
        <a href="https://docs.netlify.com/frameworks/astro/" class="btn btn-lg sm:min-w-64">Read the Docs</a>
    </p>
</Layout>

<script>
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/qg-sw.8661203bf4223e4bd225.js');
    }
</script>

<script type="text/javascript">
    !(function (q, g, r, a, p, h, js) {
        q.appier = q.qg;
        if (q.qg) return;
        js =
            q.appier =
            q.qg =
                function () {
                    js.callmethod ? js.callmethod.call(js, arguments) : js.queue.push(arguments);
                };
        js.queue = [];
        p = g.createElement(r);
        p.async = !0;
        p.src = a;
        h = g.getElementsByTagName(r)[0];
        h.parentNode.insertBefore(p, h);
    })(window, document, 'script', 'https://cdn-stg-gcp-jp0.aiqua.io/qgraph.8661203bf4223e4bd225.js');
</script>
