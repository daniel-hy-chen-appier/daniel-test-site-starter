---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';

const explainer = `
An Astro website can go way beyond static pages - on the right platform.

Netlify supports not only [Streaming SSR](https://docs.astro.build/en/guides/server-side-rendering/#html-streaming) and fast [Edge Middleware](https://docs.astro.build/en/guides/middleware/), but also [on-demand revalidation](https://www.netlify.com/blog/cache-tags-and-purge-api-on-netlify/) and [stale-while-revalidate](https://www.netlify.com/blog/swr-and-fine-grained-cache-control/). 
Any page or data can be rebuilt only when needed, without site visitors ever getting a performance hit.
`;
---

<Layout title="Welcome to Astro.">
    <ContextAlert class="mb-8" />
    <h1 class="mb-10">Netlify Platform Starter for Astro</h1>
    <Markdown content={explainer} class="mb-10 text-lg" />
    <p>
        <a href="https://docs.netlify.com/frameworks/astro/" class="btn btn-lg sm:min-w-64">Read the Docs</a>
    </p>
    <div class="mt-10">
        <h2 class="mb-4">Recommendations</h2>
        <div id="rec-list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            <!-- Recommendations will be rendered here -->
        </div>
        <script>
            function waitForAppierReady(callback) {
                if (typeof appier === 'function' && appier.callmethod) {
                    callback();
                } else {
                    setTimeout(() => waitForAppierReady(callback), 100);
                }
            }
            waitForAppierReady(() => {
                appier('init', {
                    app_id: '41a20648e34aaaad4d7e',
                    platform: 'WEB'
                });
                appier('getRecommendationByScenario', {
                    scenarioId: 'hEtzh8MBoGc65hX9xAPb55',
                    callback: function (response) {
                        if (!response || !response.recommendations || response.recommendations.length === 0) {
                            console.warn('沒有推薦資料：', response);
                            return;
                        }
                        console.log('get recommendation data');
                        console.log('取得推薦資料:', response);

                        renderRecommendations(response);
                        appier('event', 'recommendation_impression', {
                            scenarioId: 'hEtzh8MBoGc65hX9xAPb55',
                            items: response.recommendations.map((r) => r.item_id)
                        });
                    }
                });
            });
            function renderRecommendations(items) {
                const container = document.getElementById('rec-list');
                container.innerHTML = items
                    .map(
                        (item) => `
            <div class="product">
                <img src="${item.image}" alt="${item.title}" />
                <p>${item.title}</p>
            </div>
        `
                    )
                    .join('');
            }
        </script>
    </div>
</Layout>
